apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-update" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-weight": "10"
  {{- if .Values.commonAnnotations }}
  {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  template:
    spec:
      {{- include "shopware.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - name: update
          image: {{ template "shopware.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          args: [ "maintenance" ]
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          env:
            - name: INSTALLED_SHOPWARE_VERSION
              value: "1"
          envFrom:
            - configMapRef:
                name: {{ template "common.names.fullname" . }}
            - secretRef:
                name: {{ template "common.names.fullname" . }}
          volumeMounts:
            - mountPath: /var/www/html/config/jwt/
              name: shopware-jwt
            - mountPath: /var/www/html/config/packages/
              name: shopware-minio
            - mountPath: /var/www/html/custom/plugins
              name: shopware-plugins
      restartPolicy: OnFailure
      volumes:
        - name: shopware-jwt
          secret:
            secretName: {{ printf "%s-jwt" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
        {{- if .Values.minio.enabled }}
        - name: shopware-minio
          configMap:
            name: {{ printf "%s-minio" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
        {{- end }}
        - name: shopware-plugins
        {{- if .Values.persistence.enabled}}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "common.names.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}